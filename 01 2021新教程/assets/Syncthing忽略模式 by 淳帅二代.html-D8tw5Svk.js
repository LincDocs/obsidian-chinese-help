import{_ as o,c as i,e as d,o as c}from"./app-BtSMRKUu.js";const t={};function l(n,e){return c(),i("div",null,[...e[0]||(e[0]=[d('<p><a class="route-link nolebase-route-link-invalid" href="#" target="_target">淳帅二代</a></p><h2 id="忽略模式" tabindex="-1">忽略模式</h2><h3 id="概要" tabindex="-1">概要</h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>.stignore</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="描述" tabindex="-1">描述</h3><p>略</p><h3 id="语法" tabindex="-1">语法</h3><p><code>.stignore</code> 文件可包含一系列路径匹配模式，对指定文件的处理方式由第一个匹配到它的模式决定</p><ul><li><p>一般的文件名匹配它自己，例如，模式 <code>foo</code> 匹配：</p><ul><li>文件 <code>foo</code></li><li>文件<code>subdir/foo</code></li><li>任何名字是 <code>foo</code> 的文件夹</li></ul><p>空格会被认为是正常字符，除了前缀和后缀的空格会自动被修剪掉。</p></li><li><p>星号（<code>*</code>）匹配 0 个或多个字符，但是不匹配路径分割符。例如 <code>te*me</code> 匹配：</p><ul><li><code>telephone</code></li><li><code>subdir/telephone</code></li></ul><p>但是不匹配 <code>tele/phone</code></p></li><li><p>双星号（<code>**</code>）匹配 0 或多个字符，包括路径分割符，例如 <code>te*me</code> 匹配：</p><ul><li><code>telephone</code></li><li><code>subdir/telephone</code></li><li><code>tele/sub/dir/phone</code></li></ul></li><li><p>问号（<code>?</code>）匹配单个字符，不匹配路径分割符，例如 <code>te??st</code> 匹配：</p><ul><li><code>tebest</code></li></ul><p>不匹配：</p><ul><li><code>teb/st</code></li><li><code>test</code></li></ul></li><li><p>方括号（<code>[]</code>）指定符号范围，如 <code>[a-z]</code> 匹配：任何小写字符</p></li><li><p>大括号（<code>{}</code>）表示一组替代词，如 <code>{banana,pineapple}</code> 匹配：<code>banana</code> 或 <code>pineapple</code></p></li><li><p>反斜杠（<code>\\</code>）转义字符。例如 <code>\\{banana\\}</code> 会严格匹配 <code>{banana}</code> ，而不会识别成替代词。<strong>转义字符在 Windows 上不支持！</strong></p></li><li><p>以 <code>/</code> 开头的模式：只在根目录下进行匹配。例如 <code>/foo</code> 匹配 <code>foo</code> 但不匹配 <code>subdir/foo</code></p></li><li><p>开头带有 <code>#include</code> 的模式会从指定名字的文件中载入模式。如果这个文件不存在，或者被包括了多次，就会出错。注意，虽然这样可以从子文件夹中的一个文件载入模式，但模式自身仍然是以根目录为参照点的。例子：<code>#include more-patterns.txt</code></p></li><li><p>以 <code>!</code> 前缀的模式会否定这个模式：匹配的文件会被 <strong>包括</strong>（也就是，不要忽略）。这一项可以覆盖后续的忽略模式。</p></li><li><p>以 <code>(?i)</code> 前缀的模式会启用大小写不敏感。如 <code>(?!)test</code> 匹配：</p><ul><li><code>test</code></li><li><code>TEST</code></li><li><code>sEsT</code></li></ul><p><code>(?!)</code> 可以与其它模式结合，例如：<code>(?!)!picture*.png</code> 会指定 <code>Picture1.PNG</code> 不被忽略。在 Mac OS 和 Windows 上，模式永远是大小写不敏感的。</p></li><li><p>以 <code>(?d)</code> 前缀的模式，如果这些文件在阻止目录的删除，就会删除这些文件。这个前缀应该被任何 OS 生成的你乐意移除的文件使用。</p></li><li><p>以 <code>//</code> 起始的行为注释。</p></li></ul><blockquote><p>注意：</p><p>前缀的顺序可以是任意的，例如 <code>(?d)(?i)</code> ，但是不能在同一个括号中，不要使用 <s><code>(?di)</code></s></p><p>注意：</p><p>顶级的包含模式被特殊对待，并且不会强制 Syncthing 不顾其它忽略模式地扫描整个目录树。例如：<code>!/foo</code> 是一个顶级包含模式，<code>!/foo/bar</code> 不是。</p></blockquote>',10)])])}const s=o(t,[["render",l]]),p=JSON.parse('{"path":"/Syncthing%E5%BF%BD%E7%95%A5%E6%A8%A1%E5%BC%8F%20by%20%E6%B7%B3%E5%B8%85%E4%BA%8C%E4%BB%A3.html","title":"Syncthing忽略模式 by 淳帅二代","lang":"zh-CN","frontmatter":{"uid":202107161120,"aliases":[],"tags":[],"from":null,"description":"淳帅二代 忽略模式 概要 描述 略 语法 .stignore 文件可包含一系列路径匹配模式，对指定文件的处理方式由第一个匹配到它的模式决定 一般的文件名匹配它自己，例如，模式 foo 匹配： 文件 foo 文件subdir/foo 任何名字是 foo 的文件夹 空格会被认为是正常字符，除了前缀和后缀的空格会自动被修剪掉。 星号（*）匹配 0 个或多个字...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://LincDocs.github.io/obsidian-chinese-help/01 2021新教程/Syncthing%E5%BF%BD%E7%95%A5%E6%A8%A1%E5%BC%8F%20by%20%E6%B7%B3%E5%B8%85%E4%BA%8C%E4%BB%A3.html"}],["meta",{"property":"og:site_name","content":"obsidian-chinese-help/01 2021新教程"}],["meta",{"property":"og:description","content":"淳帅二代 忽略模式 概要 描述 略 语法 .stignore 文件可包含一系列路径匹配模式，对指定文件的处理方式由第一个匹配到它的模式决定 一般的文件名匹配它自己，例如，模式 foo 匹配： 文件 foo 文件subdir/foo 任何名字是 foo 的文件夹 空格会被认为是正常字符，除了前缀和后缀的空格会自动被修剪掉。 星号（*）匹配 0 个或多个字..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}]],"tag":[]},"git":{},"readingTime":{"minutes":2.17,"words":652},"filePathRelative":"Syncthing忽略模式 by 淳帅二代.md","excerpt":"<p><a class=\\"route-link nolebase-route-link-invalid\\" href=\\"#\\" target=\\"_target\\">淳帅二代</a></p>\\n<h2>忽略模式</h2>\\n<h3>概要</h3>\\n<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code class=\\"language-\\"><span class=\\"line\\"><span>.stignore</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[{"title":"Syncthing（MOC）","link":"Syncthing（MOC）.html"}],"localMap":{"nodes":[{"id":"Syncthing忽略模式 by 淳帅二代.md","value":{"title":"Syncthing忽略模式 by 淳帅二代","path":"Syncthing忽略模式 by 淳帅二代.md","outlink":[],"backlink":["Syncthing（MOC）.md"]}},{"id":"Syncthing（MOC）.md","value":{"title":"Syncthing（MOC）","path":"Syncthing（MOC）.md","outlink":[],"backlink":[]}}],"links":[{"source":"Syncthing（MOC）.md","target":"Syncthing忽略模式 by 淳帅二代.md"}]}}}');export{s as comp,p as data};
