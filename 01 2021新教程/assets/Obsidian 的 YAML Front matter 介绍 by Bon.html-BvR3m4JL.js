import{_ as p,c as r,a as s,e,b as d,d as a,w as h,t as l,r as k,o}from"./app-BtSMRKUu.js";const g={},c={href:"https://zhuanlan.zhihu.com/p/369655284",target:"_blank",rel:"noopener noreferrer"};function m(n,i){const t=k("RouteLink");return o(),r("div",null,[s("p",null,[d(t,{to:"/YAML（MOC）.html"},{default:h(()=>[...i[0]||(i[0]=[a("YAML（MOC）",-1)])]),_:1}),i[1]||(i[1]=s("br",null,null,-1)),i[2]||(i[2]=a(" 本文经过",-1)),i[3]||(i[3]=s("a",{class:"route-link nolebase-route-link-invalid",href:"#",target:"_target"},"Boninall",-1)),i[4]||(i[4]=a("授权，转载于此。原文链接： ",-1)),i[5]||(i[5]=s("a",{href:"https://zhuanlan.zhihu.com/p/370113792",target:"_blank",rel:"noopener noreferrer"},"https://zhuanlan.zhihu.com/p/370113792",-1)),i[6]||(i[6]=a(" 。",-1))]),i[11]||(i[11]=e(`<h1 id="前言" tabindex="-1">前言</h1><p>YAML 作为一种用来写文件配置的语言，简洁而又强大，不过在 Obsidian 或者其它 Markdown 中用到的 YAML 语言知识只是一些基础，因此在此仅对 Obsidian 支持的 YAML 语法进行介绍。 在 Obsidian 中需要加上 YAML 时，需要在文件的开头（是必须在文件的开头加入）输入两个三横杠<code>-</code>，如下：</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">---</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">YAML 语言</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">---</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接着再在下边的三横杠的下边加上一个空行，以防 Makrdown 渲染器错将下一行的内容进行渲染。而这两个三横杠包括的区域一般被称为 <code>Front-matter</code> 。</p><p>如果你从之前就很在意 Obsidain 中的笔记以及文章的元数据建立，例如，你每次一定要附上创建日期以及标签以及相应的类别等，那么在笔记中插入元数据的方式，除了方便你现在检索，也方便未来的插件操作等。</p><p>不过其实在某些插件出来之前，<code>Front-matter</code> 在 Obsidian 中对于普通的笔记用户用处不大，我上一次用它的原因是因为想要写 Hexo 博客，为了快速生成网页的标题、链接等使用的。但是 Obsidian 在 0.8.0 后的版本开始大规模地改进了 <code>Front-matter</code> 的易用性以及功能性，现在它已经可以被称作不得不知的 Obsidian 知识（你可以不用，但是至少要懂）。</p><h1 id="基础用法" tabindex="-1">基础用法</h1><p>Obsidian 其实在帮助文档中已经说得很清楚了，这里为了省力气，我直接将原文拷贝过来，</p><p>示例：</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">---</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">value</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">key2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">value2</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">multiple</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">one</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">two</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">three</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">multiple</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">- </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">one</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">- </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">two</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">- </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">three</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">---</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>你的所有参数都应当放在同一个 Front matter 中，如果是一个 field 对应多个参数的话，就需要用 <code>[]</code> 将它们概括起来，或者用 <code>- </code> 来将它们从上到下排列 。</p><p>而在 Obsidian 0.9.16 后， Obsidian 支持的别名（alias）需要且仅能使用 <code>Front-matter</code> 中进行标注来实现。如下：</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">---</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">alias</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">别名1</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">aliases</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">别名2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">别名3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">别名4</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">aliases</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">- </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">别名2</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">- </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">别名3</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">- </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">别名4</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">---</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>且 Obsidian 也支持在 YAML front matter 中插入标签（tag）的元数据，例如：</p><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-yaml"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">---</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">tag</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">标签1</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">tags</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: [</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">标签1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">标签2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">标签3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#还可以是&quot;#pkm&quot;等</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">tags</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">- </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">标签1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">- </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">标签2</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">- </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">标签3</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">---</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>除了标签、别名外，Obsidian 没有其它的元数据原生支持，但是所有的元数据都已经存在 Obsidian 的笔记对应的 Cache 里面，因此 Obsidian 的开发者也可以根据这些 Cache 开发一些独特的插件。</p><h1 id="高级用法" tabindex="-1">高级用法？</h1><p>Obsidian 目前使用或优化 YAML Front matter 的插件并不算多，据我所知仅有以下的几个：</p>`,18)),s("ul",null,[i[7]||(i[7]=s("li",null,"Dataview —— 根据 YAML Front matter 来生成表格",-1)),i[8]||(i[8]=s("li",null,"Query2table —— 根据 YAML Front matter 来生成表格，且支持筛选，但稳定性不足",-1)),i[9]||(i[9]=s("li",null,"Metatable —— 优化 YAML Front matter 的显示效果",-1)),s("li",null,"Text"+l(n.expand)+" —— 抽取 YAML Front matter 的值",1),i[10]||(i[10]=s("li",null,"Juggl —— 根据 YAML Front matter 的内容生成线段联系",-1))]),i[12]||(i[12]=e('<p>其中 Dataview 插件以及 Query2table 插件都是“基本”基于 YAML Front matter 的数据来生成表格或者列表的，但是此处有些许的不同，Query2table 生成的表格可以让你筛选内容，以及在操作易用性上，Query2table 也许更容易学习，但是相反地，dataview 的检索功能强大而且支持多种检索排序等，两者生成的表格分别支持了不同的特性，其中 Dataview 已经支持 CSS 定义对应的样式，而 Query2table 的上一次更新已经是四个月前的事情了。</p><p>如果你已经按部就班设置了适合自己的 YAML Frontmatter ，那么你可以根据以下的代码块适应性修改来生成自己的 Dataview 表格：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>​```Dataview</span></span>\n<span class="line"><span>table Completed, Priority, Project, defer-date as &quot;Defer Date&quot;, due-date as &quot;Due Date&quot;, recur-length as &quot;Recur Length&quot;, defer-date + recur-length as &quot;Next Date&quot;</span></span>\n<span class="line"><span>from #tasks</span></span>\n<span class="line"><span>where defer-date &lt; date(now) and completed != 1</span></span>\n<span class="line"><span>sort doDate asc</span></span>\n<span class="line"><span>​```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中 table 后边跟着的是每一列的列名称（对应 YAML Front matter 的参数），这些列的名称可以自定义也可以用原来的 YAML Front matter 的名称，from 指的是基于标签、文件关键词或什么检索式等（默认支持标签），where 指的是上边我们获取的所有笔记中匹配对应的要求的，例如这里的意思就是“目前还没完成的任务或笔记”，sort 指的是要怎么排序；由于 Dataview 有很多的不同的参数供你来获取从而生成对应的表格，因此此处请务必参考官方的文档：<a href="https://blacksmithgu.github.io/obsidian-dataview/#/" target="_blank" rel="noopener noreferrer">Dataview Document</a>；此外，关于 Dataview 的文章也在来的路上了 #FLAG 1。</p><p>如图1为 Dataview 生成的表格：</p><p><img src="https://gitee.com/cyddgi/picture-store/raw/master/img/20210506153500.png" alt="" loading="lazy"></p><hr><p>而 Query2table 也是类似的，采用下方的代码生成：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>​```query2table</span></span>\n<span class="line"><span>query: &quot;tag: article&quot;</span></span>\n<span class="line"><span>fields: </span></span>\n<span class="line"><span>	- title: note</span></span>\n<span class="line"><span>	- status: text</span></span>\n<span class="line"><span>approxNumberOfResults: 5</span></span>\n<span class="line"><span>​```</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中 query 指的是采用什么检索式，这里的检索式采用 Obsidian 支持的检索式即可，fields 指的是将哪些 YAML Front matter 的参数拿来使用，最后approxNumberOfResults 指的是获取多少行。</p><p>如图2为 Query2table 生成的表格：</p><p><img src="https://gitee.com/cyddgi/picture-store/raw/master/img/20210506153528.png" alt="" loading="lazy"></p>',12)),s("p",null,[a("至于 Text"+l(n.expand)+" 中关于 YAML Front matter 的用法则请查看我之前的文章： ",1),s("a",c,"Obsidian 插件之 Text"+l(n.expand),1)]),i[13]||(i[13]=e(`<p>而 Juggl 插件这里暂且不表，后续会专门写一篇关于 Juggl 的文章，到时候会介绍对应的使用方式。 #FLAG 2</p><h1 id="我的设置" tabindex="-1">我的设置</h1><p>因为我在使用 Obsidian 的时候更多是考虑笔记是否要写成文章，或者笔记与原文的关系，所以我的 YAML Front matter 一般会有以下的参数：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-"><span class="line"><span>title: 实际文件名，因为我的文件名可能会是数字串</span></span>
<span class="line"><span>date: 建立日期</span></span>
<span class="line"><span>tags:</span></span>
<span class="line"><span>  - 标签1</span></span>
<span class="line"><span>alias: 别名1</span></span>
<span class="line"><span>category: 类别</span></span>
<span class="line"><span>stars: 星级（可选，当为评测笔记的时候会存在）</span></span>
<span class="line"><span>from: 基于什么，来自什么</span></span>
<span class="line"><span>url: 文章链接（如果已经发文或者已经存在在 Obsidian publish 上的话）</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述的几个参数是我日常中最常用的参数，有些情况下，会加上本地的双链，用 <code>bi-links:</code> 来概括，通过这些参数，我经常的一个应用就是查看自己过去一段时间内的所有文章或者笔记列表，而且查看其中可以用来分享的，但是还没写成文章的，以及各个 FLAG。</p><h1 id="总结" tabindex="-1">总结</h1><p>以上就是 Obsidian 的 YAML Front matter 的简单介绍，用 Obsidian 对笔记进行元数据管理的时候，采用 Front matter 的方式管理，然后使用插件快速获取对应的元数据或者展示对应的元数据，显然可以让自己的笔记不再局限于单篇笔记的内容，而是利用联系展示多篇笔记之间的关系，如果你熟练地使用 YAML 进行元数据的管理的话，将来即使迁移到别的软件中，也可以轻易地利用脚本将对应的元数据转化成对应的笔记软件所支持的元数据形式。</p>`,7))])}const b=p(g,[["render",m]]),A=JSON.parse('{"path":"/Obsidian%20%E7%9A%84%20YAML%20Front%20matter%20%E4%BB%8B%E7%BB%8D%20by%20Bon.html","title":"前言","lang":"zh-CN","frontmatter":{"uid":202105061533,"aliases":[],"tags":[],"from":null,"description":"本文经过Boninall授权，转载于此。原文链接： https://zhuanlan.zhihu.com/p/370113792 。 前言 YAML 作为一种用来写文件配置的语言，简洁而又强大，不过在 Obsidian 或者其它 Markdown 中用到的 YAML 语言知识只是一些基础，因此在此仅对 Obsidian 支持的 YAML 语法进行介绍。...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"前言\\",\\"image\\":[\\"https://gitee.com/cyddgi/picture-store/raw/master/img/20210506153500.png\\",\\"https://gitee.com/cyddgi/picture-store/raw/master/img/20210506153528.png\\"],\\"dateModified\\":null,\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://LincDocs.github.io/obsidian-chinese-help/01 2021新教程/Obsidian%20%E7%9A%84%20YAML%20Front%20matter%20%E4%BB%8B%E7%BB%8D%20by%20Bon.html"}],["meta",{"property":"og:site_name","content":"obsidian-chinese-help/01 2021新教程"}],["meta",{"property":"og:title","content":"前言"}],["meta",{"property":"og:description","content":"本文经过Boninall授权，转载于此。原文链接： https://zhuanlan.zhihu.com/p/370113792 。 前言 YAML 作为一种用来写文件配置的语言，简洁而又强大，不过在 Obsidian 或者其它 Markdown 中用到的 YAML 语言知识只是一些基础，因此在此仅对 Obsidian 支持的 YAML 语法进行介绍。..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://gitee.com/cyddgi/picture-store/raw/master/img/20210506153500.png"}],["meta",{"property":"og:locale","content":"zh-CN"}]],"tag":[]},"git":{},"readingTime":{"minutes":5.99,"words":1798},"filePathRelative":"Obsidian 的 YAML Front matter 介绍 by Bon.md","excerpt":"<p><a href=\\"/obsidian-chinese-help/01 2021新教程/YAML（MOC）.html\\" target=\\"_blank\\">YAML（MOC）</a><br>\\n本文经过<a class=\\"route-link nolebase-route-link-invalid\\" href=\\"#\\" target=\\"_target\\">Boninall</a>授权，转载于此。原文链接： <a href=\\"https://zhuanlan.zhihu.com/p/370113792\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://zhuanlan.zhihu.com/p/370113792</a> 。</p>","autoDesc":true,"bioChainData":{"outlink":[{"title":"YAML（MOC）","link":"YAML（MOC）.html"}],"backlink":[{"title":"Obsidian软件本体操作教程","link":"Obsidian软件本体操作教程.html"},{"title":"YAML（MOC）","link":"YAML（MOC）.html"}],"localMap":{"nodes":[{"id":"Obsidian 的 YAML Front matter 介绍 by Bon.md","value":{"title":"Obsidian 的 YAML Front matter 介绍 by Bon","path":"Obsidian 的 YAML Front matter 介绍 by Bon.md","outlink":["YAML（MOC）.md"],"backlink":["Obsidian软件本体操作教程.md","YAML（MOC）.md"]}},{"id":"YAML（MOC）.md","value":{"title":"YAML（MOC）","path":"YAML（MOC）.md","outlink":[],"backlink":[]}},{"id":"Obsidian软件本体操作教程.md","value":{"title":"Obsidian软件本体操作教程","path":"Obsidian软件本体操作教程.md","outlink":[],"backlink":[]}}],"links":[{"source":"Obsidian 的 YAML Front matter 介绍 by Bon.md","target":"YAML（MOC）.md"},{"source":"Obsidian软件本体操作教程.md","target":"Obsidian 的 YAML Front matter 介绍 by Bon.md"},{"source":"YAML（MOC）.md","target":"Obsidian 的 YAML Front matter 介绍 by Bon.md"}]}}}');export{b as comp,A as data};
