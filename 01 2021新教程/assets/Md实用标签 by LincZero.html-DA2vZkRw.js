import{_ as n,c as h,a as t,e as a,d as s,b as l,w as e,f as r,r as p,o}from"./app-IauDOiRz.js";const k={};function u(b,i){const d=p("RouteLink");return o(),h("div",null,[t("p",null,[i[1]||(i[1]=s("作者: ",-1)),l(d,{to:"/LincZero.html"},{default:e(()=>[...i[0]||(i[0]=[s("LincZero",-1)])]),_:1}),i[2]||(i[2]=t("br",null,null,-1)),i[3]||(i[3]=s(" 论坛地址： ",-1)),i[4]||(i[4]=t("a",{href:"https://forum-zh.obsidian.md/t/topic/12670",target:"_blank",rel:"noopener noreferrer"},"https://forum-zh.obsidian.md/t/topic/12670",-1))]),i[15]||(i[15]=a(`<h1 id="md实用标签" tabindex="-1">Md实用标签</h1><h1 id="目录" tabindex="-1">目录</h1><h1 id="md实用标签-1" tabindex="-1">Md实用标签</h1><p><mark>【注意】</mark></p><ul><li><p>写作时优先使用Md自带的语法，<strong>少用</strong>HTML标签。几个原因：</p><ol><li><p>实在想要极度样式丰富，那为什么不直接使用富文本编辑呢</p></li><li><p>应当重视实际内容与效率</p><p>Markdown语法简单就是为了把更多精力放在 “写” 上，不要本末倒置，花 “大精力” 去修饰文章</p><p>除非在有 “工具栏” 的情况下，不影响写作效率时，可以适当使用（例如Ob 思源等有工具栏插件、掘金等一些博客也会自带工具栏）</p></li><li><p>语法简单与样式简单</p><p>过多地使用样式，反而容易找不到重点。一篇文章应该使用较少的几种样式，减少地去圈重点（处处重点等于没重点）</p></li></ol></li><li><p>当然，在一些情况下，使用HTML标签去丰富样式是有利的。比如：</p><ul><li>想要丰富的格式，但某些平台只能使用Markdwon写作时</li><li>产品级文档（不是指技术文档，那种也没必要，除非你有专门的部门去干。主要是单页的主要文档） <ul><li>比如某个项目的介绍文档，比如简历等（但这些一般都用富文本格式吧）</li><li>这时可以<strong>减少对效率的极致需求</strong>，花多一些精力去对文档进行润色，是合适的</li></ul></li><li>某些专题的笔记 <ul><li>比如在写注音笔记、或翻译来的文档时，ruby + rt 标签会很有用，可以保留原单词的同时又可以不让这些单词影响阅读体验</li><li>比如在软件介绍时，使用 kbd 标签（最好加个样式），看起来更直观</li></ul></li></ul></li><li><p>总之，合理使用就好</p></li></ul><h2 id="可使用" tabindex="-1">可使用</h2><h3 id="标签类" tabindex="-1">标签类</h3><table><thead><tr><th>标签</th><th>作用</th><th>使用建议</th></tr></thead><tbody><tr><td>br</td><td>换行<br>换行</td><td>比如表格内换行就使用上了</td></tr></tbody></table><h3 id="sytle类" tabindex="-1">Sytle类</h3><table><thead><tr><th>Sytle内容</th><th>作用</th><th>使用建议</th></tr></thead><tbody><tr><td>图片高宽控制<br>或者缩放</td><td><img src="https://img0.baidu.com/it/u=3452693033,2914629743&amp;fm=253" style="height:100px;"><img src="https://img1.baidu.com/it/u=692181697,2515657060&amp;fm=253&amp;app=120&amp;size=w931&amp;n=0&amp;f=JPEG&amp;fmt=auto?sec=1665680400&amp;t=73a9efc9b1274679e2ee4c6a155a98ea" style="height:100px;"></td><td>我主要是在表格内使用。让他们的高或宽相同（固定px）<br><br>完美解决对齐问题（图片本来一大一小）<br>图片缩放也行，比如50%，但一般我会给固定大小而非百分比</td></tr><tr><td>右浮动</td><td><p style="float:right;">左</p><br><p align="right">左</p></td><td>用得不多</td></tr></tbody></table><h3 id="特殊情况使用" tabindex="-1">特殊情况使用</h3><p>一般是专题笔记才用，如没必要勿使用</p><table><thead><tr><th>标签</th><th>作用</th><th>使用建议</th></tr></thead><tbody><tr><td>ruby + rt</td><td><ruby>国家<rt>Nation</rt></ruby></td><td>技术翻译文档里比较常见的（Typora复制有bug）<br>（这个最好字体在18px以上效果较好）</td></tr><tr><td>kbd</td><td><kbd>Ctrl</kbd> + <kbd>C</kbd><br><kbd>Ctrl Shift</kbd> + <kbd>V</kbd></td><td>主要是快捷键用<br>觉得原生的样式有点一般的，也可以调整一下css</td></tr><tr><td>u</td><td><u>下滑线</u></td><td></td></tr><tr><td>center</td><td><code>&lt;center&gt;居中&lt;/center&gt;&lt;br /&gt;</code>（正文生效）</td><td>非必要，勿使用</td></tr><tr><td>abbr</td><td><abbr title="kubernetes">k8s</abbr></td><td>缩写，可以为一些缩写添加注释</td></tr></tbody></table><div class="callout" data-callout="warning"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-alert-triangle"><path d="m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z"></path><path d="M12 9v4"></path><path d="M12 17h.01"></path></svg></div><div class="callout-title-inner">Warning</div></div><div class="callout-content"><p>现已不再推荐 <code>center</code> <code>font</code> <code>big</code> 等标签，不利于结构与样式分离，且他们在HTML4中已经被废弃，并在某些环境中可能报错</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[Vue warn]: Failed to resolve component: center</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">665If</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> this</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> is</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> native</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> custom</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> element,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> make</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sure</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exclude</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> it</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> component</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> resolution</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> via</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> compileroptions.isCustomElement.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">666[Vue</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> warn]:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Failed</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> resolve</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> component:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> font</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">667If</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> this</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> is</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> native</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> custom</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> element,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> make</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sure</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exclude</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> it</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> component</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> resolution</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> via</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> compilerOptions.isCustomElement.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div></div><p>兼容性<br> （以下表头缩写分别为：Obsidian、Typora、CSDN、掘金、Github、用于代替的HTML标签。）</p><table><thead><tr><th>扩展语法</th><th>Ob</th><th>Ty</th><th>CS</th><th>掘</th><th>Gi</th></tr></thead><tbody><tr><td>ruby + rt</td><td>🟩</td><td>🟩</td><td>🟩</td><td>🟩</td><td>🟩</td></tr><tr><td>kbd</td><td>🟩</td><td>🟩</td><td>🟩</td><td>🟥</td><td>🟩</td></tr><tr><td>u</td><td>🟩</td><td>🟩</td><td>🟩</td><td>🟥</td><td>🟥</td></tr><tr><td>center</td><td>🟩</td><td>🟩</td><td>🟩</td><td>🟥</td><td>🟥</td></tr><tr><td>abbr</td><td>🟩</td><td>🟩</td><td>🟩</td><td>🟩</td><td>🟥</td></tr></tbody></table><h3 id="用标签代替扩展语法" tabindex="-1">用标签代替扩展语法</h3><p>有对应的扩展语法，就说明有相关的使用需求。<br> 与html标签相比，扩展语法的优点是写得快，缺点是不如html标签兼容性好。</p>`,18)),t("table",null,[i[14]||(i[14]=t("thead",null,[t("tr",null,[t("th",null,"扩展语法"),t("th",null,[s("HTML"),t("br"),s("代替标签")]),t("th",null,"效果")])],-1)),t("tbody",null,[t("tr",null,[t("td",null,[l(d,{to:"/双链.html"},{default:e(()=>[...i[5]||(i[5]=[s("双链",-1)])]),_:1})]),i[6]||(i[6]=t("td",null,"——",-1)),i[7]||(i[7]=t("td",null,"——",-1))]),i[8]||(i[8]=t("tr",null,[t("td",null,[t("span",{class:"katex"},[t("span",{class:"katex-mathml"},[t("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[t("semantics",null,[t("mrow",null,[t("mtext",null,"内联公式")]),t("annotation",{encoding:"application/x-tex"},"内联公式")])])]),t("span",{class:"katex-html","aria-hidden":"true"},[t("span",{class:"base"},[t("span",{class:"strut",style:{height:"0.6833em"}}),t("span",{class:"mord cjk_fallback"},"内联公式")])])]),s(" ($$)")]),t("td",null,[t("s",null,[s("个别符号：特殊方式打出、"),t("code",null,"&"),s("转义、unicdoe强行输出。")]),t("br"),t("s",null,"上下标的表示也有。但像分母、矩阵等，没办法。"),t("br"),s("这个没必要转HTML标签的，还是能直接用的")]),t("td",null,"——")],-1)),i[9]||(i[9]=t("tr",null,[t("td",null,[t("mark",null,"高亮"),s(" (==)")]),t("td",null,"mark"),t("td",null,[t("mark",null,"mark高亮")])],-1)),i[10]||(i[10]=t("tr",null,[t("td",null,[s("上标"),t("sup",null,"2"),s(" (^^)")]),t("td",null,"sup"),t("td",null,[s("上标"),t("sup",null,"2")])],-1)),i[11]||(i[11]=t("tr",null,[t("td",null,[s("下标"),t("sub",null,"2"),s(" (~~)")]),t("td",null,"sub"),t("td",null,[s("下标"),t("sub",null,"2")])],-1)),i[12]||(i[12]=t("tr",null,[t("td",null,"%%ob注释%% (%%)"),t("td",null,"html注释"),t("td",null,[r("注释")])],-1)),i[13]||(i[13]=t("tr",null,[t("td",null,"ob table extended 插件表格"),t("td",null,"table（不要手动写，有在线转化工具，随便搜一下就有）"),t("td",null,"略")],-1))])]),i[16]||(i[16]=a(`<p>兼容性：<br> （以下表头缩写分别为：Obsidian、Typora、CSDN、掘金、Github、用于代替的HTML标签。）<br> （第一个方块表示对扩展语法的兼容性，第二个方块表示替换成HTML标签后的兼容性，没有或黑色方块表示就没有没有该扩展语法的替换方案）</p><table><thead><tr><th>扩展语法</th><th>Ob</th><th>Ty</th><th>CS</th><th>掘</th><th>Gi</th></tr></thead><tbody><tr><td>双链</td><td>🟩</td><td>🟥</td><td>🟥</td><td>🟥</td><td>🟥</td></tr><tr><td>内联公式</td><td>🟩</td><td>🟩</td><td>🟩</td><td>🟩</td><td>🟥</td></tr><tr><td>高亮</td><td>🟩🟩</td><td>🟩🟩</td><td>🟩🟩</td><td>🟥🟩</td><td>🟥🟥</td></tr><tr><td>Ty上下标</td><td>🟥🟩</td><td>🟩🟩</td><td>🟥🟩</td><td>🟥🟩</td><td>🟥🟩</td></tr><tr><td>ob 注释</td><td>🟩🟩</td><td>🟥🟩</td><td>🟥🟩</td><td>🟥🟩</td><td>🟥🟩</td></tr><tr><td>ob table extended</td><td>🟩🟩</td><td>🟥🟩</td><td>🟥🟩</td><td>🟥🟩</td><td>🟥🟩</td></tr></tbody></table><p>总结：</p><p>内联公式和高亮虽然属于md的扩展语法，但兼容性较好，而且就算不支持也不会有什么严重后果，可以放心使用。<br> 其他扩展语法均建议优先使用html标签作为替换方案。<br> 像双链这种即是扩展语法，又没替换方案的，就没办法了</p><h2 id="不建议使用" tabindex="-1">不建议使用</h2><h3 id="一般不建议" tabindex="-1">一般不建议</h3><table><thead><tr><th>标签</th><th>作用</th><th>使用建议</th></tr></thead><tbody><tr><td>font + style样式<br>主要是face size color</td><td><code>&lt;font style=&quot;color:red&quot;&gt;红色&lt;/font&gt;&lt;br /&gt;&lt;font style=&quot;color:blue&quot;&gt;蓝色&lt;/font&gt;&lt;br /&gt;&lt;font style=&quot;color:green&quot;&gt;绿色&lt;/font&gt;&lt;br /&gt;&lt;font style=&quot;color:cyan&quot;&gt;青色&lt;/font&gt;</code></td><td>看到有的人比较喜欢使用这个。<br>其实还是可以用，如果有工具栏，并且能保证不会以纯文本方式编辑。<br>反正我不喜欢</td></tr><tr><td>class</td><td><p class="custom">自定义</p></td><td>自定义了一个class，来使用自定义样式</td></tr></tbody></table><div class="callout" data-callout="warning"><div class="callout-title"><div class="callout-title-icon"><svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-alert-triangle"><path d="m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z"></path><path d="M12 9v4"></path><path d="M12 17h.01"></path></svg></div><div class="callout-title-inner">Warning</div></div><div class="callout-content"><p>现已不再推荐 <code>center</code> <code>font</code> <code>big</code> 等标签，不利于结构与样式分离，且他们在HTML4中已经被废弃，并在某些环境中可能报错</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[Vue warn]: Failed to resolve component: center</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">665If</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> this</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> is</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> native</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> custom</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> element,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> make</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sure</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exclude</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> it</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> component</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> resolution</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> via</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> compileroptions.isCustomElement.</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">666[Vue</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> warn]:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Failed</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> resolve</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> component:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> font</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">667If</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> this</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> is</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> native</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> custom</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> element,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> make</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sure</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exclude</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> it</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> from</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> component</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> resolution</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> via</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> compilerOptions.isCustomElement.</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div></div><h3 id="没有任何用的必要" tabindex="-1">没有任何用的必要</h3><p>一般<strong>不使用</strong>这些标签，因为 md 自身有更简单的写法</p><table><thead><tr><th>标签</th><th>作用</th><th>代替</th></tr></thead><tbody><tr><td>b</td><td><b>强调</b></td><td><strong>用md自身语法代替</strong></td></tr><tr><td>i<br>em</td><td><i>斜体</i><br><em>强调</em></td><td><em>用md自身语法代替</em><br>（有区别的，md斜体用的是em)</td></tr><tr><td>del</td><td><del>删除</del></td><td><s>用md自身语法代替</s></td></tr><tr><td>h1 (表格外有效)</td><td><h1>1级标题</h1></td><td># 1级标题</td></tr><tr><td>h2 (表格外有效)</td><td><h2>2级标题2</h2></td><td>## 2级标题</td></tr><tr><td>h3 (表格外有效)</td><td><h3>3级标题1</h3></td><td>### 3级标题</td></tr><tr><td>……</td><td>……</td><td>……</td></tr></tbody></table><h3 id="纯炫技-毫无卵用" tabindex="-1">纯炫技，毫无卵用</h3><blockquote><h4 id="details" tabindex="-1">details</h4></blockquote><p>隐藏内容，点击展开。兼容性还可以，就算不支持也只是展开而已</p><table><thead><tr><th>标签</th><th>Ob</th><th>Ty</th><th>CS</th><th>掘</th><th>Gi</th></tr></thead><tbody><tr><td>details</td><td>🟩</td><td>🟩</td><td>🟥</td><td>🟩</td><td>🟩</td></tr></tbody></table><p>效果：</p><details><p>我是一段被隐藏的内容</p></details><blockquote><h4 id="progress" tabindex="-1">progress</h4></blockquote><p>显示进度条，而且兼容性很差。</p><table><thead><tr><th>标签</th><th>Ob</th><th>Ty</th><th>CS</th><th>掘</th><th>Gi</th></tr></thead><tbody><tr><td>progress</td><td>🟩</td><td>🟥</td><td>🟥</td><td>🟥</td><td>🟥</td></tr></tbody></table><p>效果：</p><progress max="100" value="60"></progress><p>这个兼容性已经很差了，后面的那几个基本上兼容性都不会好。后面的我就不一一地去试兼容性了</p><blockquote><h4 id="figure" tabindex="-1">figure</h4></blockquote><p>可以给图片一个文字说明。效果：</p><figure><img src="https://img2.baidu.com/it/u=2231228778,2513904551&amp;fm=253" height="120"><figcaption>这是一张大象的照片</figcaption></figure><blockquote><h4 id="area" tabindex="-1">area</h4></blockquote><p>为图片提供点击热区，可以自己规定一张图的哪些区域可点击；一般配合map使用。效果：</p><div><img src="https://img1.baidu.com/it/u=692181697,2515657060&amp;fm=253&amp;app=120&amp;size=w931&amp;n=0&amp;f=JPEG&amp;fmt=auto?sec=1665680400&amp;t=73a9efc9b1274679e2ee4c6a155a98ea" width="100" height="100" alt="" usemap="#map"><map name="map"><area shape="rect" coords="0,0,100,50" alt="baidu" href="https://www.baidu.com"><area shape="rect" coords="0,50,100,100" alt="sougou" href="https://www.sogou.com/"></map></div>`,29))])}const m=n(k,[["render",u]]),c=JSON.parse('{"path":"/Md%E5%AE%9E%E7%94%A8%E6%A0%87%E7%AD%BE%20by%20LincZero.html","title":"Md实用标签","lang":"zh-CN","frontmatter":{"uid":20221124181047,"aliases":[],"description":"作者: 论坛地址： https://forum-zh.obsidian.md/t/topic/12670 Md实用标签 目录 Md实用标签 【注意】 写作时优先使用Md自带的语法，少用HTML标签。几个原因： 实在想要极度样式丰富，那为什么不直接使用富文本编辑呢 应当重视实际内容与效率 Markdown语法简单就是为了把更多精力放在 “写” 上，不要本...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Md实用标签\\",\\"image\\":[\\"\\"],\\"dateModified\\":null,\\"author\\":[]}"],["meta",{"property":"og:url","content":"https://LincDocs.github.io/obsidian-chinese-help/01 2021新教程/Md%E5%AE%9E%E7%94%A8%E6%A0%87%E7%AD%BE%20by%20LincZero.html"}],["meta",{"property":"og:site_name","content":"obsidian-chinese-help/01 2021新教程"}],["meta",{"property":"og:title","content":"Md实用标签"}],["meta",{"property":"og:description","content":"作者: 论坛地址： https://forum-zh.obsidian.md/t/topic/12670 Md实用标签 目录 Md实用标签 【注意】 写作时优先使用Md自带的语法，少用HTML标签。几个原因： 实在想要极度样式丰富，那为什么不直接使用富文本编辑呢 应当重视实际内容与效率 Markdown语法简单就是为了把更多精力放在 “写” 上，不要本..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}]]},"git":{},"readingTime":{"minutes":6.58,"words":1974},"filePathRelative":"Md实用标签 by LincZero.md","excerpt":"<p>作者: <a href=\\"/obsidian-chinese-help/01 2021新教程/LincZero.html\\" target=\\"_blank\\">LincZero</a><br>\\n论坛地址： <a href=\\"https://forum-zh.obsidian.md/t/topic/12670\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">https://forum-zh.obsidian.md/t/topic/12670</a></p>\\n<h1>Md实用标签</h1>\\n<h1>目录</h1>\\n<h1>Md实用标签</h1>\\n<p><mark>【注意】</mark></p>","autoDesc":true,"bioChainData":{"outlink":[{"title":"LincZero","link":"LincZero.html"},{"title":"双链","link":"双链.html"}],"backlink":[],"localMap":{"nodes":[{"id":"Md实用标签 by LincZero.md","value":{"title":"Md实用标签 by LincZero","path":"Md实用标签 by LincZero.md","outlink":["LincZero.md","双链.md"],"backlink":[]}},{"id":"LincZero.md","value":{"title":"LincZero","path":"LincZero.md","outlink":[],"backlink":[]}},{"id":"双链.md","value":{"title":"双链","path":"双链.md","outlink":[],"backlink":[]}}],"links":[{"source":"Md实用标签 by LincZero.md","target":"LincZero.md"},{"source":"Md实用标签 by LincZero.md","target":"双链.md"}]}}}');export{m as comp,c as data};
